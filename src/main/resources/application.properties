# ===============================
# = DATA SOURCE
# ===============================
spring.datasource.url=jdbc:mysql://localhost:3306/hardware
spring.datasource.username=root
spring.datasource.password=Crninovembar18!

# ===============================
# = JPA / HIBERNATE
# ===============================

# Prikazuj SQL upite koje JPA generi\u0161e
spring.jpa.show-sql = true

# Hibernate ddl-auto: 
#   validate: validate the schema, makes no changes to the database.
#   update: update the schema.
#   create: creates the schema, destroying previous data.
#   create-drop: drop the schema at the end of the session.

spring.jpa.hibernate.ddl-auto =  create-drop

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

spring.jpa.properties.connection.CharSet=utf8
spring.jpa.properties.connection.characterEncoding=utf8
spring.jpa.properties.hibernate.connection.useUnicode=true

#Oauth2 configuration

facebook.client.clientId: 394098307647877
facebook.client.clientSecret: a323e5673c5890955ca8ed0b1367c03b
facebook.client.accessTokenUri: https://graph.facebook.com/oauth/access_token
facebook.client.userAuthorizationUri: https://www.facebook.com/dialog/oauth
facebook.client.tokenName: oauth_token
facebook.client.authenticationScheme: query
facebook.client.clientAuthenticationScheme: form
facebook.resource.userInfoUri: https://graph.facebook.com/me

github.client.clientId: 1062c66acf07d37b5146
github.client.clientSecret: c5ba25ec2ba3bca5684fba7bffe65433ac799a43
github.client.accessTokenUri: https://github.com/login/oauth/access_token
github.client.userAuthorizationUri: https://github.com/login/oauth/authorize
github.client.clientAuthenticationScheme: form
github.resource.userInfoUri: https://api.github.com/user